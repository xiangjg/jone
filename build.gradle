buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.web'
version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencies {
	//compile('org.springframework.cloud:spring-cloud-starter-zookeeper-config')

	compile('org.springframework.boot:spring-boot-starter-web')

	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	compile ('commons-lang:commons-lang:2.6')
	compile "com.alibaba:fastjson:1.2.4"

	//dubbo zookeeper
	compile ('com.alibaba:dubbo:2.5.3')
			{exclude group: 'org.springframework'}
	compile group: 'com.101tec', name: 'zkclient', version: '0.3'
	//json rpc
	compile group: 'com.caucho', name: 'hessian', version: '4.0.7'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
	compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
	//compile group: 'org.apache.cxf', name: 'cxf-core', version: '3.1.9'
	//compile group: 'io.netty', name: 'netty', version: '3.10.5.Final'
	compile group: 'org.typelevel', name: 'scala-library', version: '2.11.8'
	compile group: 'org.mortbay.jetty', name: 'jetty', version: '6.1.26'
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	compile fileTree(dir: './lib', include: '*.jar')
	compile group: 'org.apache.poi', name: 'poi', version: '3.9'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'

	compile(
			project(":jone-entity"),
			project(":jone-dao"),
			project(":jone-util"),
			project(":jone-api"),
			project(":jone-service"),
			project(":jone-controller"),
	)
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

jar {
	String classpath = ''
	configurations.runtime.each {
		classpath = classpath +" lib/"+ it.name
	}
	manifest {
		attributes 'Main-Class': 'com.cloude.water.Application'
		attributes 'Class-Path': classpath
	}
}

task exportJar(type:Copy){
	from configurations.runtime
	into ('build/libs/lib')
}
